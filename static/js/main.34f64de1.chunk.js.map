{"version":3,"sources":["Components/columns.js","Components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["columns","title","field","validate","rowData","undefined","name","length","username","email","includes","phone","Table","useState","data","setData","selectedRows","setSelectedRows","useEffect","fetch","then","resp","json","catch","err","align","onSelectionChange","rows","editable","onRowAdd","newRow","Promise","resolve","reject","updatedRows","onRowDelete","selectedRow","index","tableData","id","splice","onRowUpdate","updatedRow","oldRow","updatedRowContainer","onBulkUpdate","Object","values","map","emp","oldData","newData","options","search","paging","filtering","actionsColumnIndex","addRowPosition","grouping","selection","actions","icon","tooltip","onClick","updateData","filter","row","handleBulkDelete","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPA+DeA,EA/DC,CACd,CACEC,MAAO,OACPC,MAAO,OACPC,SAAU,SAACC,GACT,YAAqBC,IAAjBD,EAAQE,MAAuC,KAAjBF,EAAQE,KACjC,aACEF,EAAQE,KAAKC,OAAS,IACxB,4CAMb,CACEN,MAAO,WACPC,MAAO,WACPC,SAAU,SAACC,GACT,YAAyBC,IAArBD,EAAQI,UAA+C,KAArBJ,EAAQI,SACrC,aACEJ,EAAQI,SAASD,OAAS,IAC5B,gDAMb,CACEN,MAAO,WACPC,MAAO,QACPC,SAAU,SAACC,GACT,YAAsBC,IAAlBD,EAAQK,OAAyC,KAAlBL,EAAQK,MAClC,cACGL,EAAQK,MAAMC,SAAS,OAASN,EAAQK,MAAMC,SAAS,OAC1D,8BAKb,CACET,MAAO,QACPC,MAAO,QACPC,SAAU,SAACC,GACT,YAAsBC,IAAlBD,EAAQO,OAAyC,KAAlBP,EAAQO,MAClC,aACEP,EAAQO,MAAMJ,OAAS,KACzB,2CAKb,CACEN,MAAO,UACPC,MAAO,UACPC,SAAU,SAACC,GACT,YAAqBC,IAAjBD,EAAQE,MAAuC,KAAjBF,EAAQE,MACjC,c,QCkCAM,EAtFD,WACZ,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GAAI,OAAKN,EAAQM,MACtBE,OAAM,SAAAC,GAAG,OAAI,6BAAKA,SACpB,IASH,OACE,gCACE,oBAAIC,MAAM,SAAV,wBACA,cAAC,IAAD,CACExB,MAAM,eACNa,KAAMA,EACNd,QAASA,EACT0B,kBAAmB,SAACC,GAAD,OAAUV,EAAgBU,IAC7CC,SAAU,CACRC,SAAU,SAACC,GAAD,OACR,IAAIC,SAAQ,SAACC,EAASC,GACpB,IAAMC,EAAW,sBAAOpB,GAAP,CAAagB,IAC9Bf,EAAQmB,GACRF,QAGJG,YAAa,SAACC,GAAD,OACX,IAAIL,SAAQ,SAACC,EAASC,GACpB,IAAMI,EAAQD,EAAYE,UAAUC,GAC9BL,EAAW,YAAOpB,GACxBoB,EAAYM,OAAOH,EAAO,GAC1BtB,EAAQmB,GACRF,QAGJS,YAAa,SAACC,EAAYC,GAAb,OACX,IAAIZ,SAAQ,SAACC,EAASC,GACpB,IAAMI,EAAQM,EAAOL,UAAUC,GACzBK,EAAmB,YAAO9B,GAChC8B,EAAoBP,GAASK,EAC7B3B,EAAQ6B,GACRZ,QAGJa,aAAc,SAAC7B,GAAD,OACZ,IAAIe,SAAQ,SAACC,EAASC,GACpB,IAEII,EAFEV,EAAOmB,OAAOC,OAAO/B,GACrBkB,EAAW,YAAOpB,GAExBa,EAAKqB,KAAI,SAACC,GACRZ,EAAQY,EAAIC,QAAQZ,UAAUC,GAC9BL,EAAYG,GAASY,EAAIE,WAE3BpC,EAAQmB,GACRF,SAGNoB,QAAS,CACPC,QAAQ,EACRC,QAAQ,EACRC,WAAW,EACXC,oBAAqB,EACrBC,eAAgB,QAChBC,UAAU,EACVC,WAAW,GAEbC,QAAS,CACP,CACEC,KAAM,SACNC,QAAS,4BACTC,QAAS,kBAnEM,WACvB,IAAMC,EAAalD,EAAKmD,QAAO,SAACC,GAAD,OAAUlD,EAAaN,SAASwD,MAC/DnD,EAAQiD,GAiEeG,YCtEZC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpD,MAAK,YAAkD,IAA/CqD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.34f64de1.chunk.js","sourcesContent":["const columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    validate: (rowData) => {\r\n      if (rowData.name === undefined || rowData.name === \"\") {\r\n        return \"Required\";\r\n      } else if (rowData.name.length < 3) {\r\n        return \"Name should contain atleast 3 character\";\r\n      }\r\n      return true;\r\n    },\r\n  },\r\n\r\n  {\r\n    title: \"Username\",\r\n    field: \"username\",\r\n    validate: (rowData) => {\r\n      if (rowData.username === undefined || rowData.username === \"\") {\r\n        return \"Required\";\r\n      } else if (rowData.username.length < 3) {\r\n        return \"Username should contain atleast 3 character\";\r\n      }\r\n      return true;\r\n    },\r\n  },\r\n\r\n  {\r\n    title: \"Email Id\",\r\n    field: \"email\",\r\n    validate: (rowData) => {\r\n      if (rowData.email === undefined || rowData.email === \"\") {\r\n        return \"Required\";\r\n      } else if (!rowData.email.includes(\"@\") || !rowData.email.includes(\".\")) {\r\n        return \"Enter valid email address\";\r\n      }\r\n      return true;\r\n    },\r\n  },\r\n  {\r\n    title: \"Phone\",\r\n    field: \"phone\",\r\n    validate: (rowData) => {\r\n      if (rowData.phone === undefined || rowData.phone === \"\") {\r\n        return \"Required\";\r\n      } else if (rowData.phone.length < 10) {\r\n        return \"Phone should contain atleast 10 digits\";\r\n      }\r\n      return true;\r\n    },\r\n  },\r\n  {\r\n    title: \"Website\",\r\n    field: \"website\",\r\n    validate: (rowData) => {\r\n      if (rowData.name === undefined || rowData.name === \"\") {\r\n        return \"Required\";\r\n      }\r\n      return true;\r\n    },\r\n  },\r\n];\r\n\r\nexport default columns;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport columns from './columns'\r\n\r\nconst Table = () => {\r\n  const [data, setData] = useState([]);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(resp => resp.json())\r\n      .then(resp => (setData(resp)))\r\n      .catch(err => <h1>{err}</h1>);\r\n  }, []);\r\n\r\n  const handleBulkDelete = () => {\r\n    const updateData = data.filter((row) => !selectedRows.includes(row));\r\n    setData(updateData);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1 align=\"center\">User Table</h1>\r\n      <MaterialTable\r\n        title=\"User Details\"\r\n        data={data}\r\n        columns={columns}\r\n        onSelectionChange={(rows) => setSelectedRows(rows)}\r\n        editable={{\r\n          onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              const updatedRows = [...data, newRow];\r\n              setData(updatedRows);\r\n              resolve();\r\n            }),\r\n\r\n          onRowDelete: (selectedRow) =>\r\n            new Promise((resolve, reject) => {\r\n              const index = selectedRow.tableData.id;\r\n              const updatedRows = [...data];\r\n              updatedRows.splice(index, 1);\r\n              setData(updatedRows);\r\n              resolve();\r\n            }),\r\n\r\n          onRowUpdate: (updatedRow, oldRow) =>\r\n            new Promise((resolve, reject) => {\r\n              const index = oldRow.tableData.id;\r\n              const updatedRowContainer = [...data];\r\n              updatedRowContainer[index] = updatedRow;\r\n              setData(updatedRowContainer);\r\n              resolve();\r\n            }),\r\n\r\n          onBulkUpdate: (selectedRows) =>\r\n            new Promise((resolve, reject) => {\r\n              const rows = Object.values(selectedRows);\r\n              const updatedRows = [...data];\r\n              let index;\r\n              rows.map((emp) => {\r\n                index = emp.oldData.tableData.id;\r\n                updatedRows[index] = emp.newData;\r\n              });\r\n              setData(updatedRows);\r\n              resolve();\r\n            }),\r\n        }}\r\n        options={{\r\n          search: true,\r\n          paging: false,\r\n          filtering: false,\r\n          actionsColumnIndex: -1,\r\n          addRowPosition: \"first\",\r\n          grouping: true,\r\n          selection: true,\r\n        }}\r\n        actions={[\r\n          {\r\n            icon: \"delete\",\r\n            tooltip: \"Delete all selected row ?\",\r\n            onClick: () => handleBulkDelete(),\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import './App.css';\nimport Table from './Components/Table'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}